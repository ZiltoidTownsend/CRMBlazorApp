@using Managers
@using Domain.Contracts
@using Client.Components
@using ViewModels.Tables

<style>
    .selected {
        background-color: var(--mud-palette-primary) !important;
    }

        .selected > td {
            color: white !important;
        }

            .selected > td .mud-input {
                color: white !important;
            }

</style>

@typeparam TEntity where TEntity : AuditableEntity<Guid>

@inject BaseManager<TEntity> manager

@if (TableViewModel != null)
{
    <MudTable T="TableRowViewModel" Items="@TableViewModel.Rows" RowClass="d-flex cursor-pointer" @ref="mudTable"
              ServerData="@(new Func<TableState, Task<TableData<TableRowViewModel>>>(ServerReload))"
              Hover="true" RowClassFunc="@SelectedRowClassFunc" CustomHeader="true" OnRowClick="RowClickEvent">
        <HeaderContent>
            <MudTHeadRow Class="d-flex">
                @foreach (var header in TableViewModel.Headers)
                {
                    <MudTh Class=@($"mud-grid-item-xs-{header.Weight}")>@header.DisplayValue</MudTh>
                }
            </MudTHeadRow>

        </HeaderContent>
        <RowTemplate>
            @{
                int headerIndex = 0;
            }
            @foreach (var row in context.RowItems)
            {
                int weight = TableViewModel.Headers[headerIndex].Weight;

                <MudTh Class=@($"mud-grid-item-xs-{weight}")>@row.Value</MudTh>
            }
        </RowTemplate>
    </MudTable>
}

@*<CRMTable TableViewModel=@TableViewModel TableKey="@ReestrTableKey" />*@
