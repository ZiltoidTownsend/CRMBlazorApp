@using ViewModels.Tables

<MudPaper Elevation="25">
    <MudToolBar>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Outlined.Settings" Color="Color.Inherit" OnClick="RedirectToSettingPage"/>
    </MudToolBar>
</MudPaper>

<MudTable T="TableRowViewModel" Items="@TableViewModel.Rows" RowClass="d-flex" CustomHeader="true">
    <HeaderContent>
        <MudTHeadRow Class="d-flex">
            @foreach (var header in TableViewModel.Headers)
            {
                <MudTh Class=@($"mud-grid-item-xs-{header.Position}")>@header.DisplayValue</MudTh>
            }
        </MudTHeadRow>

    </HeaderContent>
    <RowTemplate>
        @foreach(var row in context.RowItems)
        {
            <MudTh Class="mud-grid-item-xs-1">@row.Value</MudTh>
        }
    </RowTemplate>
</MudTable>

@*<MudSimpleTable Bordered="true" Class="overflow-hidden p-4">
    <thead>
        <tr class="d-flex flex-row">
            @if (TableViewModel != null && TableViewModel.Headers.Count > 0)
                foreach (var header in TableViewModel.Headers)
                {
                    <td class="mud-grid-item-xs-@header.Position">@header.DisplayValue</td>
                }
        </tr>
    </thead>
    <tbody class="d-flex flex-column">
            @if (TableViewModel != null && TableViewModel.Rows.Count > 0)
            {
                @foreach (var row in TableViewModel.Rows)
                {
                    <tr class="d-flex flex-row">
                        @foreach (var rowItem in row.RowItems)
                        {
                            <td class="mud-grid-item-xs-1">@rowItem.Value</td>
                        }
                    </tr>
                }
            }
    </tbody>
</MudSimpleTable>*@